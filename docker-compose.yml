version: '3.9'

services:
  dns:
    build:
      context: ./dns
      dockerfile: Dockerfile
    container_name: dns
    ports:
      - "53:53/udp"
      - "53:53/tcp"
    networks:
      - ispnet

  portal:
    build:
      context: ./portal
      dockerfile: Dockerfile
    container_name: portal
    networks:
      - ispnet

  cliente1_portal:
    build:
      context: ./cliente1-portal
      dockerfile: Dockerfile
    container_name: cliente1_portal
    ports:
      - "8080:80"
    networks:
      - ispnet

  proxy:
    build:
      context: ./proxy
      dockerfile: Dockerfile
    container_name: proxy
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
    volumes:
      - ./proxy/ssl/sonserina.crt:/etc/nginx/ssl/sonserina.crt:ro
      - ./proxy/ssl/sonserina.key:/etc/nginx/ssl/sonserina.key:ro
      - ./proxy/ssl/portal.cliente1.crt:/etc/nginx/ssl/portal.cliente1.crt:ro
      - ./proxy/ssl/portal.cliente1.key:/etc/nginx/ssl/portal.cliente1.key:ro
      - ./proxy/index.html:/usr/share/nginx/html/index.html:ro
      - ./proxy/404.html:/usr/share/nginx/html/404.html:ro
      - ./proxy/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      portal:
        condition: service_started
      webmail:
        condition: service_started
      frontend:
        condition: service_healthy
    networks:
      - ispnet

  mail:
    build:
      context: ./email
      dockerfile: Dockerfile
    image: email
    container_name: email
    hostname: mail.sonserina.br
    restart: always
    environment:
      - DOMAIN=sonserina.br
    ports:
      - "25:25/tcp"
      - "587:587/tcp"
      - "465:465/tcp"
      - "993:993/tcp"
    volumes:
      - ./proxy/ssl/sonserina.crt:/etc/ssl/certs/sonserina.crt:ro
      - ./proxy/ssl/sonserina.key:/etc/ssl/private/sonserina.key:ro
      - ./proxy/ssl/dhparam.pem:/etc/ssl/certs/dhparam.pem:ro
      - maildata:/maildata
    networks:
      - ispnet

  webmail:
    image: roundcube/roundcubemail:latest
    container_name: webmail
    depends_on:
      - mail
    volumes:
      - ./webmail/config/config.inc.php:/var/roundcube/config/config.inc.php:ro
    networks:
      - ispnet

  db:
    image: postgres:15-alpine
    container_name: sign-db
    environment:
      POSTGRES_USER: ${DB_USER:-dbuser}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-dbuserpass123}
      POSTGRES_DB: ${DB_NAME:-docsign_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-dbuser} -d ${DB_NAME:-docsign_db}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - ispnet

  backend:
    image: salesfilho/sign-api:latest
    container_name: sign-api
    platform: linux/arm64
    environment:
      DB_HOST: db
      DB_PORT: ${DB_PORT:-5432}
      DB_USER: ${DB_USER:-dbuser}
      DB_PASSWORD: ${DB_PASSWORD:-dbuserpass123}
      DB_NAME: ${DB_NAME:-docsign_db}
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://backend:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ispnet

  frontend:
    image: salesfilho/sign-app:latest
    container_name: sign-app
    platform: linux/arm64
    environment:
      API_BASE_URL: ${API_BASE_URL:-http://localhost:8000/api}
    ports:
      - "${FRONTEND_PORT:-8081}:80"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ispnet

networks:
  ispnet:
    driver: bridge

volumes:
  roundcube_data:
    driver: local
  maildata:
    driver: local
  postgres_data:
    driver: local
