# /etc/nginx/nginx.conf - Cliente 1
http {
    # -------------------
    # Definição dos Upstreams
    # -------------------
    upstream sign_frontend {
        server sign-app:80;
    }

    upstream portal_site {
        server portal:80;
    }

    upstream hotsite_site {
        server hotsite:80;
    }

    # -------------------
    # Servidor único de aplicação (todas as rotas no sub‑domínio portal.cliente1...)
    # -------------------
    server {
        listen       80;
        server_name  portal.cliente1.sonserina.br;

        access_log   /var/log/nginx/access.log  main;
        error_log    /var/log/nginx/error.log   warn;

        # Proxy para Sign App, mantendo /sign/ no URI
        location /sign/ {
            proxy_pass         http://sign_frontend;
            proxy_http_version 1.1;
            proxy_set_header   Connection "";
            proxy_set_header   Host              $host;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_read_timeout  90;
            proxy_send_timeout  90;
        }

        # Proxy para o Portal estático, mantendo /portal/ no URI
        location /portal/ {
            proxy_pass         http://portal_site;
            proxy_set_header   Host              $host;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }

        # Proxy para o Hotsite, mantendo /hotsite/ no URI
        location /hotsite/ {
            proxy_pass         http://hotsite_site;
            proxy_set_header   Host              $host;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }

        # Rota raiz: pode servir um index ou retornar 404
        location = / {
            # Se quiser ter um HTML próprio, descomente:
            # root   /usr/share/nginx/html;
            # index  index.html;
            return 404;
        }

        # Qualquer outro caminho fora dos prefixos acima retorna 404
        location / {
            return 404;
        }
    }
}
