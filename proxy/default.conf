# =====================
# 1) DEFINIÇÃO DOS UPSTREAMS
# =====================
# Define os servidores de backend para uso com proxy_pass

upstream portal {
    server portal:80;              # Container 'portal' na porta 80
}

upstream webmail {
    server webmail:80;             # Container 'webmail' na porta 80
}

upstream hogwarts_proxy {
    server hogwarts_proxy:80;      # Container intermediário (cliente1) na porta 80
}

# =====================
# 2) SERVIDOR PADRÃO (HTTP não mapeado)
# =====================
# Fallback se o domínio requisitado não for encontrado

server {
    listen       80 default_server;
    server_name  _;

    root         /usr/share/nginx/html;
    index        index.html index.htm;

    access_log   /var/log/nginx/access.log  main;
    error_log    /var/log/nginx/error.log   debug;

    location / {
        try_files $uri $uri/ =404;   # Retorna 404 se o arquivo não existir
    }
}

# =====================
# 3) sonserina.br (HTTP)
# =====================
# Serve conteúdo estático diretamente para sonserina.br e www

server {
    listen       80;
    server_name  sonserina.br www.sonserina.br;

    root         /usr/share/nginx/html;
    index        index.html index.htm;

    access_log   /var/log/nginx/root_access.log  main;
    error_log    /var/log/nginx/root_error.log   debug;

    location / {
        try_files $uri $uri/ =404;
    }
}

# =====================
# 4, 5, 6) REDIRECIONAMENTOS PARA HTTPS
# =====================
# Redireciona os serviços para versão segura

server {
    listen       80;
    server_name  proxy.sonserina.br;
    return 301   https://$host$request_uri;
}

server {
    listen       80;
    server_name  portal.sonserina.br;
    return 301   https://$host$request_uri;
}

server {
    listen       80;
    server_name  webmail.sonserina.br;
    return 301   https://$host$request_uri;
}

# =====================
# 8) sonserina.br (HTTPS)
# =====================
# Servidor HTTPS para domínio raiz com conteúdo estático

server {
    listen              443 ssl default_server;
    server_name         sonserina.br www.sonserina.br;

    ssl_certificate     /etc/nginx/ssl/sonserina.crt;
    ssl_certificate_key /etc/nginx/ssl/sonserina.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    root                /usr/share/nginx/html;
    index               index.html index.htm;

    access_log          /var/log/nginx/ssl_root_access.log  main;
    error_log           /var/log/nginx/ssl_root_error.log   debug;

    location / {
        try_files $uri $uri/ /index.html;
    }
}

# =====================
# 9) proxy.sonserina.br (HTTPS)
# =====================
# Serve conteúdo estático via HTTPS

server {
    listen              443 ssl;
    server_name         proxy.sonserina.br;

    ssl_certificate     /etc/nginx/ssl/sonserina.crt;
    ssl_certificate_key /etc/nginx/ssl/sonserina.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    root                /usr/share/nginx/html;
    index               index.html index.htm;

    access_log          /var/log/nginx/ssl_proxy_access.log  main;
    error_log           /var/log/nginx/ssl_proxy_error.log   debug;

    location / {
        try_files $uri $uri/ /index.html;
    }
}

# =====================
# 10) portal.sonserina.br (HTTPS) - PROXY REVERSO
# =====================
# Encaminha requisições para o container 'portal'

server {
    listen              443 ssl;
    server_name         portal.sonserina.br;

    ssl_certificate     /etc/nginx/ssl/sonserina.crt;
    ssl_certificate_key /etc/nginx/ssl/sonserina.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    access_log          /var/log/nginx/ssl_portal_access.log  main;
    error_log           /var/log/nginx/ssl_portal_error.log   debug;

    location / {
        proxy_pass         http://portal;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }
}

# =====================
# 11) webmail.sonserina.br (HTTPS) - PROXY REVERSO
# =====================
# Encaminha requisições para o container 'webmail'

server {
    listen              443 ssl;
    server_name         webmail.sonserina.br;

    ssl_certificate     /etc/nginx/ssl/sonserina.crt;
    ssl_certificate_key /etc/nginx/ssl/sonserina.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    access_log          /var/log/nginx/ssl_webmail_access.log  main;
    error_log           /var/log/nginx/ssl_webmail_error.log   debug;

    location / {
        proxy_pass         http://webmail;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }
}

# =====================
# 12) CLIENTE1 (HTTPS dinâmico)
# =====================
# Aceita subdomínios como portal.cliente1.sonserina.br, sign.cliente1.sonserina.br etc.
# e repassa tudo para o container hogwarts_proxy

server {
    listen 443 ssl;

    server_name ~^(?<subdominio>.+)\.(?<cliente>[^.]+)\.sonserina\.br$;

    ssl_certificate     /etc/nginx/ssl/portal.cliente1.crt;
    ssl_certificate_key /etc/nginx/ssl/portal.cliente1.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    access_log          /var/log/nginx/proxy_cliente1_access.log  main;
    error_log           /var/log/nginx/proxy_cliente1_error.log   debug;

    location / {
        proxy_pass         http://hogwarts_proxy;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }
}

# =====================
# 13) CLIENTE1 (HTTP)
# =====================
# Permite atender *.hogwarts.br via proxy reverso (sem HTTPS)
# Útil para redirecionar ou ambientes de teste

server {
    listen 80;
    server_name *.hogwarts.br;

    access_log   /var/log/nginx/proxy_cliente1_access.log  main;
    error_log    /var/log/nginx/proxy_cliente1_error.log   debug;

    location / {
        proxy_pass         http://hogwarts_proxy;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }
}
