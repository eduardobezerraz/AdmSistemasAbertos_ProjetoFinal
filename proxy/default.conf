# 1) Definição dos UPSTREAMS
upstream portal {
    server portal:80;
}
upstream webmail {
    server webmail:80;
}

upstream portal_cliente1 {
    server cliente1_portal:80;  # Corrigido: era portal:80
}

upstream sign {
    server sign-app:80;
}

upstream hotsite_site {
    server cliente1_hotsite:80;  # Corrigido: era hotsite:80
}

# 2) SERVIDOR PADRÃO (fallback para HTTP não mapeado)
server {
    listen       80 default_server;
    server_name  _;

    root         /usr/share/nginx/html;
    index        index.html index.htm;

    access_log   /var/log/nginx/access.log  main;
    error_log    /var/log/nginx/error.log   debug;

    location / {
        try_files $uri $uri/ =404;
    }
}

# 3) sonserina.br e www.sonserina.br em HTTP → serve estático (sem redirecionar ao Portal)
server {
    listen       80;
    server_name  sonserina.br www.sonserina.br;

    root         /usr/share/nginx/html;
    index        index.html index.htm;

    access_log   /var/log/nginx/root_access.log  main;
    error_log    /var/log/nginx/root_error.log   debug;

    location / {
        try_files $uri $uri/ =404;
    }
}

# 4) proxy.sonserina.br em HTTP → redireciona para HTTPS
server {
    listen       80;
    server_name  proxy.sonserina.br;

    return 301   https://$host$request_uri;
}

# 5) portal.sonserina.br em HTTP → redireciona para HTTPS
server {
    listen       80;
    server_name  portal.sonserina.br;

    return 301   https://$host$request_uri;
}

# 6) webmail.sonserina.br em HTTP → redireciona para HTTPS
server {
    listen       80;
    server_name  webmail.sonserina.br;

    return 301   https://$host$request_uri;
}

# 8) sonserina.br e www.sonserina.br em HTTPS (conteúdo estático)
server {
    listen              443 ssl http2 default_server;
    server_name         sonserina.br www.sonserina.br;

    ssl_certificate     /etc/nginx/ssl/sonserina.crt;
    ssl_certificate_key /etc/nginx/ssl/sonserina.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    root                /usr/share/nginx/html;
    index               index.html index.htm;

    access_log          /var/log/nginx/ssl_root_access.log  main;
    error_log           /var/log/nginx/ssl_root_error.log   debug;

    location / {
        try_files $uri $uri/ /index.html;
    }
}

# 9) proxy.sonserina.br em HTTPS (conteúdo estático)
server {
    listen              443 ssl http2;
    server_name         proxy.sonserina.br;

    ssl_certificate     /etc/nginx/ssl/sonserina.crt;
    ssl_certificate_key /etc/nginx/ssl/sonserina.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    root                /usr/share/nginx/html;
    index               index.html index.htm;

    access_log          /var/log/nginx/ssl_proxy_access.log  main;
    error_log           /var/log/nginx/ssl_proxy_error.log   debug;

    location / {
        try_files $uri $uri/ /index.html;
    }
}

# 10) portal.sonserina.br em HTTPS (proxy reverso)
server {
    listen              443 ssl http2;
    server_name         portal.sonserina.br;

    ssl_certificate     /etc/nginx/ssl/sonserina.crt;
    ssl_certificate_key /etc/nginx/ssl/sonserina.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    access_log          /var/log/nginx/ssl_portal_access.log  main;
    error_log           /var/log/nginx/ssl_portal_error.log   debug;

    location / {
        proxy_pass         http://portal;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }
}

# 11) webmail.sonserina.br em HTTPS (proxy reverso)
server {
    listen              443 ssl http2;
    server_name         webmail.sonserina.br;

    ssl_certificate     /etc/nginx/ssl/sonserina.crt;
    ssl_certificate_key /etc/nginx/ssl/sonserina.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    access_log          /var/log/nginx/ssl_webmail_access.log  main;
    error_log           /var/log/nginx/ssl_webmail_error.log   debug;

    location / {
        proxy_pass         http://webmail;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }
}

# 12) sign.cliente1.sonserina.br em HTTPS (SIGN CLIENTE 1)
server {
    listen              443 ssl http2;
    server_name         sign.cliente1.sonserina.br;

    ssl_certificate     /etc/nginx/ssl/sonserina.crt;
    ssl_certificate_key /etc/nginx/ssl/sonserina.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    access_log          /var/log/nginx/ssl_sign_access.log  main;
    error_log           /var/log/nginx/ssl_sign_error.log   debug;

    location / {
        proxy_pass         http://sign;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }
}

#  13) hotsite.cliente1.sonserina.br em HTTPS (HOTSITE CLIENTE 1)

server {
    listen              443 ssl http2;
    server_name         hotsite.cliente1.sonserina.br;

    ssl_certificate     /etc/nginx/ssl/sonserina.crt;
    ssl_certificate_key /etc/nginx/ssl/sonserina.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    access_log          /var/log/nginx/ssl_hotsite_access.log  main;
    error_log           /var/log/nginx/ssl_hotsite_error.log   debug;

    location / {
        proxy_pass         http://hotsite_site;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }
}



#13 portal.cliente1.sonserina.br ( PORTAL CLIENTE 1 )
server {
    listen 80;
    server_name portal.cliente1.sonserina.br;
    return 301 https://$host$request_uri;
}

# Servidor HTTPS com certificado e proxy reverso
server {
    listen 443 ssl;
    server_name portal.cliente1.sonserina.br;

    ssl_certificate     /etc/nginx/ssl/portal.cliente1.crt;
    ssl_certificate_key /etc/nginx/ssl/portal.cliente1.key;

    location / {
        proxy_pass http://cliente1_portal:80;
    }
}