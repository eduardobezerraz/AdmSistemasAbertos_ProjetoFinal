# 1) Upstreams dos serviços internos do ISP
upstream portal {
    server portal:80;
}
upstream webmail {
    server webmail:80;
}

# Upstream para o proxy de Hogwarts
upstream hogwarts_proxy {
    # Nota: este nome (“hogwarts_proxy”) deve bater com o container_name do outro Compose
    server hogwarts_proxy:80;
}

###############################################################################
# HTTP 80 – Sonserina e Hogwarts
###############################################################################

# 2) Redireciona TODOS os *.hogwarts.br para HTTPS via Sonserina
server {
    listen      80;
    server_name portal.hogwarts.br proxy.hogwarts.br hotsite.hogwarts.br;
    return      301 https://$host$request_uri;
}

# 3) Redireciona subdomínios da Sonserina para HTTPS, serve apenas "/" em HTTP
server {
    listen       80 default_server;
    server_name  _;

    root         /usr/share/nginx/html;
    index        index.html index.htm;

    # Serve apenas a raiz com arquivo estático
    location = / {
        try_files $uri $uri/ =404;
    }

    # Subdomínios conhecidos da Sonserina são redirecionados para HTTPS
    location / {
        if ($host ~* ^(proxy|portal|webmail)\.sonserina\.br$) {
            return 301 https://$host$request_uri;
        }

        return 404;
    }
}

###############################################################################
# HTTPS 443 – Sonserina
###############################################################################

# 4) catch‑all TLS inválido
server {
    listen 443 ssl default_server;
    server_name _;

    ssl_certificate     /etc/nginx/ssl/sonserina.crt;
    ssl_certificate_key /etc/nginx/ssl/sonserina.key;

    return 444;
}

# 5.1) sonserina.br estático
server {
    listen              443 ssl;
    server_name         sonserina.br www.sonserina.br;

    ssl_certificate     /etc/nginx/ssl/sonserina.crt;
    ssl_certificate_key /etc/nginx/ssl/sonserina.key;

    root                /usr/share/nginx/html;
    index               index.html index.htm;

    location / {
        try_files $uri $uri/ /index.html;
    }
}

# 5.2) proxy/portal/webmail Sonserina
server {
    listen              443 ssl;
    server_name         proxy.sonserina.br portal.sonserina.br webmail.sonserina.br;

    ssl_certificate     /etc/nginx/ssl/sonserina.crt;
    ssl_certificate_key /etc/nginx/ssl/sonserina.key;

    location / {
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;

        # Direcionamento de acordo com o subdomínio
        set $target "";
        if ($host = proxy.sonserina.br) {
            set $target "static";
        }
        if ($host = portal.sonserina.br) {
            set $target "portal";
        }
        if ($host = webmail.sonserina.br) {
            set $target "webmail";
        }
        # Caso contrário, encaminha ao serviço interno
        if ($target = "portal") {
            proxy_pass http://portal;
        }
        if ($target = "webmail") {
            proxy_pass http://webmail;
        }
    }
}

###############################################################################
# HTTPS 443 – Hogwarts via Sonserina (encaminha ao proxy_hogwarts)
###############################################################################

server {
    listen              443 ssl;
    server_name         portal.hogwarts.br proxy.hogwarts.br hotsite.hogwarts.br;

    ssl_certificate     /etc/nginx/ssl/portal.cliente1.crt;
    ssl_certificate_key /etc/nginx/ssl/portal.cliente1.key;

    location / {
        proxy_pass         http://hogwarts_proxy;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }
}
